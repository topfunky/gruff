# Generated from lib/gruff/store/basic_data.rb with RBS::Inline

module Gruff
  class Store
    # @private
    class BasicData
      attr_accessor label: String | Symbol

      attr_accessor points: Array[nil | Float | Integer]

      attr_accessor color: String

      # @rbs label: String | Symbol
      # @rbs points: Array[nil | Float | Integer] | nil
      # @rbs color: String
      def initialize: (String | Symbol label, Array[nil | Float | Integer] | nil points, String color) -> untyped

      alias x_points points

      def y_points: () -> untyped

      def coordinates: () -> untyped

      def coordinate_and_pointsizes: () -> untyped

      # @rbs return: bool
      def empty?: () -> bool

      # @rbs return: Integer
      def columns: () -> Integer

      # @rbs return: Float | Integer
      def min: () -> (Float | Integer)

      alias min_x min

      # @rbs return: Float | Integer
      def max: () -> (Float | Integer)

      alias max_x max

      # @rbs minimum: Float | Integer
      # @rbs spread: Float | Integer
      # @rbs return: Gruff::Store::BasicData
      def normalize: (minimum: Float | Integer, spread: Float | Integer) -> Gruff::Store::BasicData
    end
  end
end
